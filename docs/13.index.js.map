{"version":3,"sources":["webpack:///./sources/theatre/modules/collide.js","webpack:///./sources/game/models/systems/common/hitbox.js"],"names":["caller","A","B","x","y","BCDE","width","height","ABCD","EFGH","hitbox","entities","resolvers","Object","entries","forEach","nameA","entityA","hitboxComponentA","get","positionComponentA","collideableA","collideable","collideableTypesA","keys","nameB","entityB","hitboxComponentB","positionComponentB","indexOf","type","Rectangle","parameters","name","Point","push","apply","collide","penetration","previousPositionComponentA","previous","previousPositionComponentB","previousHitboxComponentA","previousHitboxComponentB","previousA","previousB","previousOverlapX","previousOverlapY","top","right","bottom","left","collision","scope","models","snippets","bind","resolver"],"mappings":"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","file":"13.index.js","sourcesContent":["import {Point, Rectangle} from './shape.js';\n\nconst caller = {\n\n    'collidePointPoint': collidePointPoint,\n    'collidePointRectangle': collidePointRectangle,\n    'collideRectangleRectangle': collideRectangleRectangle\n};\n\nfunction collide(A, B) {\n\n    const parameters = [];\n\n    let name = 'collide';\n\n    if (A instanceof Point === true) {\n\n        parameters.push(A);\n\n        name += 'Point';\n    }\n\n    if (B instanceof Point === true) {\n\n        parameters.push(B);\n\n        name += 'Point';\n    }\n\n    if (parameters.indexOf(A) === -1\n    && A instanceof Rectangle === true) {\n\n        parameters.push(A);\n\n        name += 'Rectangle';\n    }\n\n    if (parameters.indexOf(B) === -1\n    && B instanceof Rectangle === true) {\n\n        parameters.push(B);\n\n        name += 'Rectangle';\n    }\n\n    return caller[name].apply(null, parameters);\n}\n\nfunction collidePointPoint(A, B) {\n\n    if (A.x !== B.x\n    || A.y !== B.y) {\n\n        return false;\n    }\n\n    return true;\n}\n\nfunction collidePointRectangle(A, BCDE) {\n\n    if (A.x < BCDE.x\n    || A.x > BCDE.x + BCDE.width\n    || A.y < BCDE.y\n    || A.y > BCDE.y + BCDE.height) {\n\n        return false;\n    }\n\n    return true;\n}\n\nfunction collideRectangleRectangle(ABCD, EFGH) {\n\n    if (ABCD.x + ABCD.width < EFGH.x\n    || ABCD.x > EFGH.x + EFGH.width\n    || ABCD.y + ABCD.height < EFGH.y\n    || ABCD.y > EFGH.y + EFGH.height) {\n\n        return false;\n    }\n\n    return true;\n}\n\n// exports current module as a function\nexport {collide};\n","import {collide} from 'modules/collide.js';\r\nimport {Rectangle} from 'modules/shape.js';\r\n\r\nfunction hitbox(entities) {\r\n\r\n    const resolvers = [];\r\n\r\n    Object.entries(entities).forEach(([nameA, entityA]) => {\r\n\r\n        const hitboxComponentA = entityA.get('hitbox');\r\n        const positionComponentA = entityA.get('position');\r\n\r\n        const collideableA = hitboxComponentA.collideable;\r\n        const collideableTypesA = Object.keys(collideableA);\r\n\r\n        Object.entries(entities).forEach(([nameB, entityB]) => {\r\n\r\n            if (nameA === nameB) {\r\n\r\n                return;\r\n            }\r\n\r\n            const hitboxComponentB = entityB.get('hitbox');\r\n            const positionComponentB = entityB.get('position');\r\n\r\n            if (collideableTypesA.indexOf(hitboxComponentB.type) !== -1) {\r\n\r\n                const A = new Rectangle(\r\n\r\n                    positionComponentA.x + hitboxComponentA.x,\r\n                    positionComponentA.y + hitboxComponentA.y,\r\n                    hitboxComponentA.width,\r\n                    hitboxComponentA.height\r\n                );\r\n\r\n                const B = new Rectangle(\r\n\r\n                    positionComponentB.x + hitboxComponentB.x,\r\n                    positionComponentB.y + hitboxComponentB.y,\r\n                    hitboxComponentB.width,\r\n                    hitboxComponentB.height\r\n                );\r\n\r\n                if (collide(A, B) === true) {\r\n\r\n                    const penetration = {\r\n\r\n                        'top': (A.y > B.y && A.y < B.y + B.height) ? B.height - (A.y - B.y) : 0,\r\n                        'right': (A.x + A.width > B.x && A.x + A.width < B.x + B.width) ? A.x + A.width - B.x : 0,\r\n                        'bottom': (A.y + A.height > B.y && A.y + A.height < B.y + B.height) ? A.y + A.height - B.y : 0,\r\n                        'left': (A.x > B.x && A.x < B.x + B.width) ? B.width - (A.x - B.x) : 0\r\n                    };\r\n\r\n                    const previousPositionComponentA = entityA.get('position').previous;\r\n                    const previousPositionComponentB = entityB.get('hitbox').previous;\r\n\r\n                    const previousHitboxComponentA = entityA.get('hitbox').previous;\r\n                    const previousHitboxComponentB = entityB.get('hitbox').previous;\r\n\r\n                    const previousA = new Rectangle(\r\n\r\n                        previousPositionComponentA.x + previousHitboxComponentA.x,\r\n                        previousPositionComponentA.y + previousHitboxComponentA.y,\r\n                        previousHitboxComponentA.width,\r\n                        previousHitboxComponentA.height\r\n                    );\r\n\r\n                    const previousB = new Rectangle(\r\n\r\n                        previousPositionComponentB.x + previousHitboxComponentB.x,\r\n                        previousPositionComponentB.y + previousHitboxComponentB.y,\r\n                        previousHitboxComponentB.width,\r\n                        previousHitboxComponentB.height\r\n                    );\r\n\r\n                    const previousOverlapX = !(previousA.x + previousA.width - 1 < previousB.x || previousA.x > previousB.x + previousB.width - 1);\r\n                    const previousOverlapY = !(previousA.y + previousA.height - 1 < previousB.y || previousA.y > previousB.y + previousB.height - 1);\r\n\r\n                    let top = previousOverlapX === true && previousOverlapY === false && previousA.y > A.y;\r\n                    let right = previousOverlapY === true && previousOverlapX === false && previousA.x < A.x;\r\n                    let bottom = previousOverlapX === true && previousOverlapY === false && previousA.y < A.y;\r\n                    let left = previousOverlapY === true && previousOverlapX === false && previousA.x > A.x;\r\n\r\n                    if (previousOverlapX === false\r\n                    && previousOverlapY === false) {\r\n\r\n                        if (penetration.top > 0 && (penetration.top <= penetration.right || penetration.top <= penetration.left)) {\r\n\r\n                            top = true;\r\n                        }\r\n\r\n                        else if (penetration.right > 0 && (penetration.right <= penetration.top || penetration.right <= penetration.bottom)) {\r\n\r\n                            right = true;\r\n                        }\r\n\r\n                        else if (penetration.bottom > 0 && (penetration.bottom <= penetration.right || penetration.bottom <= penetration.left)) {\r\n\r\n                            bottom = true;\r\n                        }\r\n\r\n                        else if (penetration.left > 0 && (penetration.left <= penetration.bottom || penetration.left <= penetration.top)) {\r\n\r\n                            left = true;\r\n                        }\r\n                    }\r\n\r\n                    const direction = {\r\n\r\n                        'top': top,\r\n                        'right': right,\r\n                        'bottom': bottom,\r\n                        'left': left\r\n                    };\r\n\r\n                    const collision = {\r\n\r\n                        'delta': penetration,\r\n                        'from': direction\r\n                    };\r\n\r\n                    const {scope, name} = collideableA[hitboxComponentB.type];\r\n\r\n                    resolvers.push(this.scripts.snippets[scope][name].bind(this, entityA, collision, entityB));\r\n                }\r\n            }\r\n        });\r\n    });\r\n\r\n    resolvers.forEach((resolver) => {\r\n\r\n        resolver();\r\n    });\r\n}\r\n\r\nexport {hitbox};\r\n"],"sourceRoot":""}